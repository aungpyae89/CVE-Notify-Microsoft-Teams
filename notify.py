#!/usr/bin/python3
import requests
import json
from datetime import datetime, timedelta

curr_date = datetime.utcnow()
formatted_date = curr_date.strftime('%Y-%m-%d')

def fetch_latest_cve(vendor_or_product):
    url = "https://services.nvd.nist.gov/rest/json/cves/1.0?"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        cves = data['result']['CVE_Items']
        selected_cves = [cve for cve in cves if is_vendor_or_product_selected(cve, vendor_or_product)]
        return selected_cves
    else:
        print(f"[-] Failed to fetch latest CVE: {response.status_code}")
        print(response.content.decode('utf-8'))  # Print the response content for debugging purposes
        return None

def is_vendor_or_product_selected(cve, vendor_or_product):
    description = cve['cve']['description']['description_data'][0]['value'].lower()
    global ven
    for name in vendor_or_product:
        if name.lower() in description:
            ven = name
            return True
    return False


def send_teams_alert(webhook_url, cve_data):
    headers = {
        "Content-Type": "application/json"
    }

    for cve in cve_data:
        message = f"<span style='color: red;'><b>ðŸš¨ New CVE Alert!</b></span><br>**Vendor**: `{ven.upper()}` <br>**Date**: `{formatted_date}` <br> **CVE ID**: ```{cve['cve']['CVE_data_meta']['ID']}```<br>**Description**: {cve['cve']['description']['description_data'][0]['value']}"

        payload = {
            "text": message
        }

        response = requests.post(webhook_url, headers=headers, json=payload)

        if response.status_code == 200:
            print(f"[+] New CVE Detected : {cve['cve']['CVE_data_meta']['ID']}")
        else:
            print(f"[-] Failed to send alert to Microsoft Teams for CVE ID: {cve['cve']['CVE_data_meta']['ID']}")
            print(response.content.decode('utf-8'))  # Print the response content for debugging purposes

if __name__ == "__main__":
    teams_webhook_url = 'Please Put Your Microsoft Teams Webhook URL Here'

    selected_vendors_or_products = ["jira ","atlassian","Zabbix ","Palo Alto","Gitlab","chrome","macintosh","wordpress","cloudflare","vmware","java","kubernetes","cisco","vmware","paloalto","fortinet","microsoft","veeam","centOS","Ubuntu","Oracle","Adobe"]

    latest_cves = fetch_latest_cve(selected_vendors_or_products)
    if latest_cves:
        send_teams_alert(teams_webhook_url, latest_cves)
    else:
        print("[-] No new CVEs found")
